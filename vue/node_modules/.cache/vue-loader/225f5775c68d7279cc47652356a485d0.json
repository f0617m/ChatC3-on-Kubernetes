{"remainingRequest":"/home/centos/rails_v5.2.3/ChatC3/chat-c3/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/centos/rails_v5.2.3/ChatC3/chat-c3/src/views/Home.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/home/centos/rails_v5.2.3/ChatC3/chat-c3/src/views/Home.vue","mtime":1584023615337},{"path":"/home/centos/rails_v5.2.3/ChatC3/chat-c3/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/home/centos/rails_v5.2.3/ChatC3/chat-c3/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/centos/rails_v5.2.3/ChatC3/chat-c3/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/centos/rails_v5.2.3/ChatC3/chat-c3/node_modules/vuetify-loader/lib/loader.js","mtime":1564062719000},{"path":"/home/centos/rails_v5.2.3/ChatC3/chat-c3/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/centos/rails_v5.2.3/ChatC3/chat-c3/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#routerLink {\n  text-decoration: none;\n}\n",{"version":3,"sources":["Home.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqJA;AACA;AACA","file":"Home.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <v-app id=\"inspire\">\n    <v-navigation-drawer\n      v-if=\"isViewNav\"\n      v-model=\"drawer\"\n      app\n      clipped\n    >\n      <v-list dense nav>\n        <v-list-item\n          v-for=\"content in contents\"\n          :key=\"content.title\"\n          link\n          :to=\"content.link\"\n        >\n          <v-list-item-icon>\n            <v-icon>{{ content.icon }}</v-icon>\n          </v-list-item-icon>\n          <v-list-item-content>\n            <v-list-item-title>{{ content.title }}</v-list-item-title>\n          </v-list-item-content>\n        </v-list-item>\n      </v-list>\n    </v-navigation-drawer>\n\n    <v-app-bar\n      app\n      clipped-left\n      color=\"orange lighten-1\"\n      dark\n    >\n      <v-app-bar-nav-icon v-if=\"isViewNav\" @click.stop=\"drawer = !drawer\"></v-app-bar-nav-icon>\n      <router-link id=\"routerLink\" to=\"/\">\n        <v-toolbar-title class=\"white--text\">Chat-C3</v-toolbar-title>\n      </router-link>\n      <div class=\"flex-grow-1\"></div>\n      <router-link v-if=\"isLogin\" id=\"routerLink\" to=\"/setting\" class=\"white--text\">\n        {{ username }}さん\n      </router-link>\n      <router-link v-if=\"!isLogin\" id=\"routerLink\" to=\"/login\" class=\"white--text\">\n        <v-icon>mdi-login</v-icon>\n        ログイン\n      </router-link>\n      <v-menu\n        left\n        bottom\n      >\n        <template v-slot:activator=\"{ on }\">\n          <v-btn icon v-on=\"on\">\n            <v-icon>mdi-dots-vertical</v-icon>\n          </v-btn>\n        </template>\n        <v-list dense nav>\n          <v-list-item\n            v-for=\"menu in menus\"\n            :key=\"menu.title\"\n            link\n            @click=\"SelectMethods(menu.event)\"\n          >\n            <v-list-item-icon>\n              <v-icon>{{ menu.icon }}</v-icon>\n            </v-list-item-icon>\n            <v-list-item-content>\n              <v-list-item-title>{{ menu.title }}</v-list-item-title>\n            </v-list-item-content>\n          </v-list-item>\n        </v-list>\n      </v-menu>\n    </v-app-bar>\n\n    <router-view :key1=\"this\"></router-view>\n\n  </v-app>\n</template>\n\n<script>\nimport Vue from 'vue'\nimport Axios from 'axios'\nimport VueAxios from 'vue-axios'\n\nconst axios = Axios\nVue.prototype.$axios = axios\n\nVue.use(VueAxios, Axios)\n\nexport default {\n  data () {\n    return {\n      isLogin: this.$store.getters['auth/isLogin'],\n      drawer: null,\n      isViewNav: false,\n      originalcontents: [\n        {title: 'チャット相手を探す', icon: 'mdi-chat', link: '/chatroom'},\n        {title: 'チャット相手を探す2', icon: 'mdi-chat',},\n      ],\n      contents: [],\n      menus: [\n        {title: 'ユーザ設定', icon: 'mdi-face', event: 'setting'},\n        {title: 'ログアウト', icon: 'mdi-logout', event: 'logout'}\n      ]\n    }\n  },\n  created () {\n    this.$vuetify.theme.light = true\n    this.contents = this.originalcontents\n  },\n  beforeRouteUpdate (to, from, next) {\n    //再描画前のアクション\n    next();\n    //再描画後のアクション\n    this.updateContents(this.originalcontents)\n    this.updateViewNav(false)\n    this.isLogin = this.$store.getters['auth/isLogin']\n    this.userName = this.$store.getters['auth/getName']\n  },\n  computed: {\n    username(){\n      return this.$store.getters['auth/getName']\n    },\n    token(){\n      return this.$store.getters['auth/getToken']\n    },\n  },\n  methods: {\n    updateContents(contents) {\n      this.contents = contents\n    },\n    updateViewNav(isView) {\n      this.isViewNav = isView\n    },\n    SelectMethods(method){\n      if(method == 'logout'){\n        this.logout()\n      }else if(method == 'setting'){\n        this.setting()\n      }\n    },\n    setting(){\n      this.$router.push('/setting')\n    },\n    logout(){\n      this.$store.dispatch('auth/logout')\n      this.$router.push('/login')\n    },\n  },\n}\n</script>\n\n<style>\n#routerLink {\n  text-decoration: none;\n}\n</style>\n"]}]}