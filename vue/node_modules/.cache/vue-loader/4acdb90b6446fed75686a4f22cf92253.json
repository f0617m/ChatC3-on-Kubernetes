{"remainingRequest":"/home/centos/rails_v5.2.3/ChatC3/chat-c3/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/centos/rails_v5.2.3/ChatC3/chat-c3/src/components/SignUp.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/centos/rails_v5.2.3/ChatC3/chat-c3/src/components/SignUp.vue","mtime":1584285534942},{"path":"/home/centos/rails_v5.2.3/ChatC3/chat-c3/node_modules/vuetify-loader/lib/loader.js","mtime":1564062719000},{"path":"/home/centos/rails_v5.2.3/ChatC3/chat-c3/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/centos/rails_v5.2.3/ChatC3/chat-c3/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport Vue from 'vue'\r\nimport Axios from 'axios'\r\nimport VueAxios from 'vue-axios'\r\n\r\nconst axios = Axios\r\nVue.prototype.$axios = axios\r\n\r\nVue.use(VueAxios, Axios)\r\n\r\nexport default {\r\n  name: 'signup',\r\n  data () {\r\n    return {\r\n      user_id: '',\r\n      user_name: '',\r\n      password: '',\r\n      confirmPassword: '',\r\n      showPassword: false,\r\n      showConfirmPassword: false,\r\n      image_name: \"/user/default.png\",\r\n      rules: {\r\n        required: v => !!v || '必須入力です',\r\n        passwordLength: v => (v.length <= 16 && v.length >= 8) || 'パスワードは8～16文字以内に収めてください',\r\n        userIdLength: v => (v.length <= 16 && v.length >= 8) || 'ユーザーIDは8～16文字以内に収めてください',\r\n        userNameLength: v => (v.length <= 16) || 'ユーザー名は16文字以内に収めてください',\r\n        confirmPassword: v => v === this.password || 'パスワードが一致していません',\r\n        isHalfWidth: v => this.isHalfWidth(v) || '使用できるのは半角英数字のみです',\r\n      },\r\n      user_info: {\r\n        user_id: this.user_id,\r\n        name: this.user_name,\r\n        image_name: this.image_name,\r\n        password: this.password,\r\n      },\r\n      alert_data: {\r\n        message: '',\r\n        type: null,\r\n      },\r\n    }\r\n  },\r\n  mounted(){\r\n    this.updateUserInfo()\r\n  },\r\n  methods: {\r\n    isHalfWidth(str) {\r\n      str = (str==null)? \"\":str\r\n      if(str.match(/^[A-Za-z0-9]*$/)){\r\n        return true\r\n      }else{\r\n        return false\r\n      }\r\n    },\r\n    createUser(){\r\n      if(this.$refs.form.validate()){\r\n        this.updateUserInfo()\r\n\r\n        let formData = new FormData()\r\n\r\n        fetch(this.image_name)\r\n        .then(response => response.blob())\r\n        .then(blob => new File([blob], \"default.jpg\"))\r\n        .then(file => {\r\n          this.user_info.image_name = file\r\n\r\n          formData.append(\"user_id\", this.user_info.user_id)\r\n          formData.append(\"name\", this.user_info.name)\r\n          formData.append(\"image_name\", file)\r\n          formData.append(\"password\", this.user_info.password)\r\n\r\n          //formData.append(\"user\", this.user_info)\r\n\r\n          //this.user_info.image_name = formData\r\n          console.log(file)\r\n          console.log(formData)\r\n\r\n          //this.$store.dispatch('auth/create', { user: this.user_info })\r\n          this.$store.dispatch('auth/create', formData)\r\n          .then(response => this.signupSuccessful(response))\r\n          .catch(error => this.signupFailed(error))\r\n\r\n        })\r\n      }\r\n    },\r\n    updateUserInfo(){\r\n      this.user_info.user_id = this.user_id\r\n      this.user_info.name = this.user_name\r\n      this.user_info.password = this.password\r\n    },\r\n    showAlert(message, type){\r\n      this.alert_data.message = message\r\n      this.alert_data.type = type\r\n    },\r\n    signupSuccessful(response){\r\n      this.showAlert('アカウント登録完了', 'success')\r\n      if(this.$store.getters['auth/isLogin'] === true){\r\n        this.$router.push('/startchat')\r\n      }\r\n    },\r\n    signupFailed(error){\r\n      this.showAlert(error.response.data[0], 'error')\r\n    },\r\n  },\r\n}\r\n",{"version":3,"sources":["SignUp.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmDA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SignUp.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <v-content>\r\n    <v-container fluid id=\"container\">\r\n      <v-row no-gutters id=\"row\">\r\n        <v-card width=\"600\" class=\"mx-auto mb-auto\" color=\"green lighten-5\">\r\n          <v-card-title>新規アカウント登録</v-card-title>\r\n          <v-alert :color=\"alert_data.type\" v-if=\"alert_data.type\">\r\n              {{ alert_data.message }}\r\n          </v-alert>\r\n          <v-form class=\"signup_form ml-10 mb-10\" ref=\"form\">\r\n            <v-text-field\r\n              v-model=\"user_id\"\r\n              label=\"*ユーザーID 半角英数字 8～16文字\"\r\n              :rules=\"[rules.required, rules.userIdLength, rules.isHalfWidth]\"\r\n            ></v-text-field>\r\n            <v-text-field\r\n              v-model=\"user_name\"\r\n              label=\"*ユーザー名 1～16文字\"\r\n              :rules=\"[rules.required, rules.userNameLength]\"\r\n            ></v-text-field>\r\n            <v-text-field\r\n              v-model=\"password\"\r\n              :type=\"showPassword ? 'text' : 'password'\"\r\n              label=\"*パスワード 半角英数字 8～16文字\"\r\n              :append-icon=\"showPassword ? 'mdi-eye' : 'mdi-eye-off'\"\r\n              :rules=\"[rules.required, rules.passwordLength, rules.isHalfWidth]\"\r\n              @click:append=\"showPassword = !showPassword\"\r\n            ></v-text-field>\r\n            <v-text-field\r\n              v-model=\"confirmPassword\"\r\n              :type=\"showConfirmPassword ? 'text' : 'password'\"\r\n              label=\"*パスワード(確認用) 半角英数字 8~16文字\"\r\n              :append-icon=\"showConfirmPassword ? 'mdi-eye' : 'mdi-eye-off'\"\r\n              :rules=\"[rules.required, rules.passwordLength, rules.confirmPassword, rules.isHalfWidth]\"\r\n              @click:append=\"showConfirmPassword = !showConfirmPassword\"\r\n            ></v-text-field>\r\n            <v-btn\r\n              class=\"mt-5\"\r\n              color=\"teal lighten-4\"\r\n              @click=\"createUser\"\r\n            >\r\n              アカウント作成\r\n            </v-btn>\r\n          </v-form>\r\n        </v-card>\r\n      </v-row>\r\n    </v-container>\r\n  </v-content>\r\n</template>\r\n\r\n<script>\r\nimport Vue from 'vue'\r\nimport Axios from 'axios'\r\nimport VueAxios from 'vue-axios'\r\n\r\nconst axios = Axios\r\nVue.prototype.$axios = axios\r\n\r\nVue.use(VueAxios, Axios)\r\n\r\nexport default {\r\n  name: 'signup',\r\n  data () {\r\n    return {\r\n      user_id: '',\r\n      user_name: '',\r\n      password: '',\r\n      confirmPassword: '',\r\n      showPassword: false,\r\n      showConfirmPassword: false,\r\n      image_name: \"/user/default.png\",\r\n      rules: {\r\n        required: v => !!v || '必須入力です',\r\n        passwordLength: v => (v.length <= 16 && v.length >= 8) || 'パスワードは8～16文字以内に収めてください',\r\n        userIdLength: v => (v.length <= 16 && v.length >= 8) || 'ユーザーIDは8～16文字以内に収めてください',\r\n        userNameLength: v => (v.length <= 16) || 'ユーザー名は16文字以内に収めてください',\r\n        confirmPassword: v => v === this.password || 'パスワードが一致していません',\r\n        isHalfWidth: v => this.isHalfWidth(v) || '使用できるのは半角英数字のみです',\r\n      },\r\n      user_info: {\r\n        user_id: this.user_id,\r\n        name: this.user_name,\r\n        image_name: this.image_name,\r\n        password: this.password,\r\n      },\r\n      alert_data: {\r\n        message: '',\r\n        type: null,\r\n      },\r\n    }\r\n  },\r\n  mounted(){\r\n    this.updateUserInfo()\r\n  },\r\n  methods: {\r\n    isHalfWidth(str) {\r\n      str = (str==null)? \"\":str\r\n      if(str.match(/^[A-Za-z0-9]*$/)){\r\n        return true\r\n      }else{\r\n        return false\r\n      }\r\n    },\r\n    createUser(){\r\n      if(this.$refs.form.validate()){\r\n        this.updateUserInfo()\r\n\r\n        let formData = new FormData()\r\n\r\n        fetch(this.image_name)\r\n        .then(response => response.blob())\r\n        .then(blob => new File([blob], \"default.jpg\"))\r\n        .then(file => {\r\n          this.user_info.image_name = file\r\n\r\n          formData.append(\"user_id\", this.user_info.user_id)\r\n          formData.append(\"name\", this.user_info.name)\r\n          formData.append(\"image_name\", file)\r\n          formData.append(\"password\", this.user_info.password)\r\n\r\n          //formData.append(\"user\", this.user_info)\r\n\r\n          //this.user_info.image_name = formData\r\n          console.log(file)\r\n          console.log(formData)\r\n\r\n          //this.$store.dispatch('auth/create', { user: this.user_info })\r\n          this.$store.dispatch('auth/create', formData)\r\n          .then(response => this.signupSuccessful(response))\r\n          .catch(error => this.signupFailed(error))\r\n\r\n        })\r\n      }\r\n    },\r\n    updateUserInfo(){\r\n      this.user_info.user_id = this.user_id\r\n      this.user_info.name = this.user_name\r\n      this.user_info.password = this.password\r\n    },\r\n    showAlert(message, type){\r\n      this.alert_data.message = message\r\n      this.alert_data.type = type\r\n    },\r\n    signupSuccessful(response){\r\n      this.showAlert('アカウント登録完了', 'success')\r\n      if(this.$store.getters['auth/isLogin'] === true){\r\n        this.$router.push('/startchat')\r\n      }\r\n    },\r\n    signupFailed(error){\r\n      this.showAlert(error.response.data[0], 'error')\r\n    },\r\n  },\r\n}\r\n</script>\r\n\r\n<style>\r\n#container {\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n#row {\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n#col {\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n.signup_form{\r\n  width: 400px;\r\n}\r\n</style>\r\n"]}]}