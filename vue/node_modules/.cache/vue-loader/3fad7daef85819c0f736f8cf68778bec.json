{"remainingRequest":"/home/centos/rails_v5.2.3/ChatC3/chat-c3/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/centos/rails_v5.2.3/ChatC3/chat-c3/src/components/ChatRoom.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/home/centos/rails_v5.2.3/ChatC3/chat-c3/src/components/ChatRoom.vue","mtime":1584173680796},{"path":"/home/centos/rails_v5.2.3/ChatC3/chat-c3/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/home/centos/rails_v5.2.3/ChatC3/chat-c3/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/centos/rails_v5.2.3/ChatC3/chat-c3/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/centos/rails_v5.2.3/ChatC3/chat-c3/node_modules/vuetify-loader/lib/loader.js","mtime":1564062719000},{"path":"/home/centos/rails_v5.2.3/ChatC3/chat-c3/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/centos/rails_v5.2.3/ChatC3/chat-c3/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\n.content{\r\n  overflow: hidden;\r\n  height: 100vh;\r\n}\r\n.room-board{\r\n\r\n}\r\n.draw-board{\r\n  flex: 2;\r\n  //overflow-y:scroll;\r\n  margin: 0 1em 0 1em;\r\n}\r\n.chat-board{\r\n  flex: 1;\r\n}\r\n",{"version":3,"sources":["ChatRoom.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0QA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ChatRoom.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <v-content class=\"content\">\r\n    <v-container class=\"room-board\" fluid fill-height>\r\n      <v-layout>\r\n        <div class=\"draw-board\">\r\n          <draw ref=\"draw\"></draw>\r\n        </div>\r\n        <div class=\"chat-board\">\r\n          <chat ref=\"chat\"></chat>\r\n        </div>\r\n      </v-layout>\r\n    </v-container>\r\n\r\n    <v-dialog v-model=\"matchingDialog.isShow\" persistent max-width=\"500\">\r\n      <v-card>\r\n        <v-card-title class=\"headline\">{{ matchingDialog.title }}</v-card-title>\r\n        <v-card-text>\r\n          {{ matchingDialog.text }}\r\n          <v-progress-circular\r\n            :size=\"40\"\r\n            color=\"purple\"\r\n            indeterminate\r\n          ></v-progress-circular>\r\n        </v-card-text>\r\n        <v-card-actions>\r\n          <v-spacer></v-spacer>\r\n          <v-btn\r\n            color=\"green\"\r\n            text\r\n            @click=\"exitRoom()\"\r\n          >\r\n            退室する\r\n          </v-btn>\r\n        </v-card-actions>\r\n      </v-card>\r\n    </v-dialog>\r\n\r\n    <v-dialog v-model=\"exitDialog.isShow\" persistent max-width=\"300\">\r\n      <v-card>\r\n        <v-card-title class=\"headline\">{{ exitDialog.title }}</v-card-title>\r\n        <v-card-text>\r\n          {{ exitDialog.text }}\r\n        </v-card-text>\r\n        <v-card-actions>\r\n          <v-spacer></v-spacer>\r\n          <v-btn\r\n            color=\"green\"\r\n            text\r\n            @click=\"exitRoom()\"\r\n          >\r\n            OK\r\n          </v-btn>\r\n        </v-card-actions>\r\n      </v-card>\r\n    </v-dialog>\r\n\r\n  </v-content>\r\n</template>\r\n\r\n<script>\r\nimport Vue from 'vue'\r\nimport Axios from 'axios'\r\nimport VueAxios from 'vue-axios'\r\nimport ActionCable from 'actioncable'\r\n\r\nconst axios = Axios\r\nVue.prototype.$axios = axios\r\n\r\nconst cable = ActionCable.createConsumer('ws:192.168.56.102:3000/cable')\r\nVue.prototype.$cable = cable\r\n\r\nVue.use(VueAxios, Axios)\r\n\r\nimport Draw from './Draw.vue'\r\nimport Chat from './Chat.vue'\r\n\r\nfunction getMessages(){\r\n}\r\nfunction invalidDialog(){\r\n}\r\nfunction addMessage(){\r\n}\r\nfunction drawLine(){\r\n}\r\nfunction exitConfirm(){\r\n}\r\nfunction sendMessage(){\r\n}\r\n\r\nlet username\r\n\r\nexport default {\r\n  name: 'chatroom',\r\n  props: ['key1'],\r\n  components: {\r\n    Draw,\r\n    Chat\r\n  },\r\n  data () {\r\n    return {\r\n      drawer: null,\r\n      roomChannel: null,\r\n      contents: [\r\n        {title: 'Paint', icon: 'mdi-brush'},\r\n        {title: 'Game', icon: 'mdi-gamepad-variant-outline'},\r\n        {title: 'Video', icon: 'mdi-youtube'}\r\n      ],\r\n      menus: [\r\n        {title: 'Menu1', icon: 'mdi-help-circle-outline'},\r\n        {title: 'Menu2', icon: 'mdi-help-circle-outline'},\r\n        {title: 'Menu3', icon: 'mdi-help-circle-outline'},\r\n        {title: 'Menu4', icon: 'mdi-help-circle-outline'}\r\n      ],\r\n      exitDialog: {\r\n        isShow: false,\r\n        title: 'チャット相手が退室したため、開始画面に戻ります',\r\n        text: '次のチャット相手を探しましょう',\r\n      },\r\n      matchingDialog: {\r\n        isShow: true,\r\n        title: 'チャット相手を探しています',\r\n        text: '相手が見つかるまでしばらく時間がかかる可能性があります',\r\n      },\r\n    }\r\n  },\r\n  computed: {\r\n    userid(){\r\n      return this.$store.getters['auth/getUserId']\r\n    },\r\n    username (){\r\n      return this.$store.getters['auth/getName']\r\n    },\r\n    token(){\r\n      return this.$store.getters['auth/getToken']\r\n    },\r\n\r\n  },\r\n  created(){\r\n    this.$axios.defaults.headers.common['Authorization'] = \"Token \" + this.token;\r\n    this.key1.updateContents(this.contents)\r\n    this.key1.updateViewNav(true)\r\n  },\r\n  mounted() {\r\n    //this.getMessages()\r\n    //this.getStrokes()\r\n    getMessages = this.getMessages\r\n    invalidDialog = this.invalidDialog\r\n    drawLine = this.drawLine\r\n    addMessage = this.addMessage\r\n    exitConfirm = this.exitConfirm\r\n    sendMessage = this.sendMessage\r\n    username = this.username\r\n    this.createChannel()\r\n  },\r\n  beforeRouteLeave (to, from, next) {\r\n    console.log(to)\r\n    console.log(to.query['skip'])\r\n    console.log(from)\r\n\r\n    var answer;\r\n\r\n    if(to.query['skip']){\r\n      this.removeChannel()\r\n      next()\r\n    }else{\r\n      answer = window.confirm('退室しますか？\\n※退室すると同じチャットルームには戻れません')\r\n    }\r\n\r\n    if(answer){\r\n      this.removeChannel()\r\n      next()\r\n    }else{\r\n      next(false)\r\n    }\r\n\r\n  },\r\n  methods: {\r\n    createChannel(){\r\n      this.roomChannel = cable.subscriptions.create(\r\n        { channel: \"RoomChannel\", room_id: this.$route.params['id'], user_id: this.userid},\r\n        {\r\n          connected: function(){\r\n            fetch(getMessages())\r\n            .then(response => {\r\n              sendMessage('[' + username + ']さんが入室しました')\r\n            })\r\n          },\r\n          received: function(data) {\r\n\r\n            console.log('received')\r\n            console.log(data)\r\n            if(data['action'] == \"start\"){\r\n              invalidDialog()\r\n            }\r\n            if(data['action'] == \"talk\"){\r\n              addMessage(data)\r\n            }\r\n            if(data['action'] == \"draw\"){\r\n              drawLine(data['user_id'], data['data'].fromx, data['data'].fromy, data['data'].tox, data['data'].toy, data['data'].color, data['data'].width);\r\n            }\r\n            if(data['action'] == \"remove\"){\r\n              exitConfirm()\r\n            }\r\n          },\r\n        }\r\n      )\r\n    },\r\n    removeChannel(){\r\n      if (this.roomChannel){\r\n        cable.subscriptions.remove(this.roomChannel)\r\n      }\r\n    },\r\n    getMessages(){\r\n      this.$axios.get('http://192.168.56.102:3000/api/v1/getMessages/' + this.$route.params['id'])\r\n      .then(response => {\r\n        this.loadMessages(response.data)\r\n      })\r\n      .catch(error => {\r\n        console.log(error)\r\n      })\r\n    },\r\n    loadMessages(messages){\r\n      messages.forEach(function(value){\r\n        addMessage(value);\r\n      })\r\n    },\r\n    addMessage(value) {\r\n      this.$refs.chat.addMessage(value);\r\n    },\r\n    sendMessage(content) {\r\n      this.$refs.chat.sendMessage(content);\r\n    },\r\n    getStrokes(){\r\n      this.$axios.get('http://192.168.56.102:3000/api/v1/getStroke/' + this.$route.params['id'])\r\n      .then(response => {\r\n        this.loadStrokes(response.data)\r\n      })\r\n      .catch(error => {\r\n        console.log(error)\r\n      })\r\n    },\r\n    loadStrokes(strokes){\r\n      strokes.forEach(function(value){\r\n        drawLine('dummy', value['prevx'], value['prevy'], value['currx'], value['curry'], value['color'], value['width']);\r\n      })\r\n    },\r\n    drawLine(user_id, fromx, fromy, tox, toy, color, width) {\r\n      if(user_id != this.userid){\r\n        this.$refs.draw.drawLine(fromx, fromy, tox, toy, color, width);\r\n      }\r\n    },\r\n    invalidDialog(){\r\n      this.matchingDialog.isShow = false\r\n    },\r\n    exitConfirm(){\r\n      this.exitDialog.isShow = true\r\n    },\r\n    exitRoom(){\r\n      this.$router.push({path: '/startchat', query: { skip : true}})\r\n    },\r\n  },\r\n  name: 'chatroom'\r\n}\r\n</script>\r\n\r\n<style>\r\n.content{\r\n  overflow: hidden;\r\n  height: 100vh;\r\n}\r\n.room-board{\r\n\r\n}\r\n.draw-board{\r\n  flex: 2;\r\n  //overflow-y:scroll;\r\n  margin: 0 1em 0 1em;\r\n}\r\n.chat-board{\r\n  flex: 1;\r\n}\r\n</style>\r\n"]}]}