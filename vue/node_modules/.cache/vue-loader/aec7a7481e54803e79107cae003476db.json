{"remainingRequest":"/home/centos/rails_v5.2.3/ChatC3/chat-c3/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/centos/rails_v5.2.3/ChatC3/chat-c3/src/components/Setting.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/centos/rails_v5.2.3/ChatC3/chat-c3/src/components/Setting.vue","mtime":1584284857130},{"path":"/home/centos/rails_v5.2.3/ChatC3/chat-c3/node_modules/vuetify-loader/lib/loader.js","mtime":1564062719000},{"path":"/home/centos/rails_v5.2.3/ChatC3/chat-c3/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/centos/rails_v5.2.3/ChatC3/chat-c3/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport Vue from 'vue'\r\nimport Axios from 'axios'\r\nimport VueAxios from 'vue-axios'\r\n\r\nconst axios = Axios\r\nVue.prototype.$axios = axios\r\n\r\nVue.use(VueAxios, Axios)\r\n\r\nexport default {\r\n  name: 'setting',\r\n  data () {\r\n    return {\r\n      be_password: '',\r\n      af_password: '',\r\n      af_confirmPassword: '',\r\n      be_showPassword: false,\r\n      af_showPassword: false,\r\n      af_showConfirmPassword: false,\r\n      inset: false,\r\n      imageButton: false,\r\n      nameButton: false,\r\n      passwordButton: false,\r\n      rules: {\r\n        required: v => !!v || '必須入力です',\r\n        passwordLength: v => (v.length <= 16 && v.length >= 8) || 'パスワードは8～16文字以内に収めてください',\r\n        userIdLength: v => (v.length <= 16 && v.length >= 8) || 'ユーザーIDは8～16文字以内に収めてください',\r\n        userNameLength: v => (v.length <= 16) || 'ユーザー名は16文字以内に収めてください',\r\n        confirmPassword: v => v === this.af_password || 'パスワードが一致していません',\r\n        isHalfWidth: v => this.isHalfWidth(v) || '使用できるのは半角英数字のみです',\r\n      },\r\n      af_username: '',\r\n      af_imagename: '',\r\n      updateDialog: {\r\n        isShow: false,\r\n        title: '更新に成功しました',\r\n      },\r\n      alert_data: {\r\n        message: '',\r\n        type: null,\r\n      },\r\n    }\r\n  },\r\n  mounted(){\r\n    this.getImage()\r\n    console.log(this.$store.getters['auth/getImageName'])\r\n  },\r\n  created(){\r\n    this.$axios.defaults.headers.common['Authorization'] = \"Token \" + this.token;\r\n  },\r\n  computed: {\r\n    be_username (){\r\n      return this.$store.getters['auth/getName']\r\n    },\r\n    username: {\r\n      get: function () {\r\n        if(this.af_username){\r\n          return this.af_username\r\n        }else{\r\n          return this.be_username\r\n        }\r\n      },\r\n      set: function (val) {\r\n        this.af_username = val\r\n      }\r\n    },\r\n    userid(){\r\n      return this.$store.getters['auth/getUserId']\r\n    },\r\n    be_imagename(){\r\n      let url = this.$store.getters['auth/getImageName']\r\n      if(url){\r\n        let index = url.indexOf('/user')\r\n        url = url.substring(index)\r\n        url = decodeURI(url)\r\n        return url\r\n      }\r\n    },\r\n    token(){\r\n      return this.$store.getters['auth/getToken']\r\n    },\r\n    defaultimage(){\r\n      return \"/user/default.png\"\r\n    },\r\n  },\r\n  methods: {\r\n    isHalfWidth(str) {\r\n      str = (str==null)? \"\":str\r\n      if(str.match(/^[A-Za-z0-9]*$/)){\r\n        return true\r\n      }else{\r\n        return false\r\n      }\r\n    },\r\n    getImage(){\r\n      this.$axios.post('http://192.168.56.102:3000/api/v1/getImageName',{\r\n        token: this.token\r\n      })\r\n      .then(response => {\r\n        this.setImage(response.data.url)\r\n      })\r\n      .catch(error => {\r\n        console.log(error)\r\n      });\r\n    },\r\n    onFileChange(e){\r\n      console.log(e)\r\n      let files = e.target.files || e.dataTransfer.files\r\n\r\n      let reader = new FileReader()\r\n      reader.readAsDataURL(files[0])\r\n      reader.onload = (e) => {\r\n        var img = document.getElementById('user-image')\r\n        img.src = reader.result\r\n        this.imageButton = true\r\n        this.af_imagename = files[0]\r\n      }\r\n    },\r\n    onNameChange(e){\r\n      if(this.be_username != e && this.$refs.nameform.validate()){\r\n        this.nameButton = true\r\n      }else{\r\n        this.nameButton = false\r\n      }\r\n    },\r\n    onPasswordChange(){\r\n      if(this.$refs.passwdform.validate()){\r\n        this.passwordButton = true\r\n      }else{\r\n        this.passwordButton = false\r\n      }\r\n    },\r\n    resetImage(){\r\n      let answer = window.confirm('プロフィール画像を初期化してもよいですか？')\r\n      let reader = new FileReader()\r\n\r\n      if(answer){\r\n        console.log('answer yes')\r\n        fetch(this.defaultimage)\r\n        .then(response => response.blob())\r\n        .then(blob => new File([blob], \"default.jpg\"))\r\n        .then(file => {\r\n\r\n          reader.readAsDataURL(file)\r\n          reader.onload = (e) => {\r\n            var img = document.getElementById('user-image')\r\n            img.src = reader.result\r\n            this.imageButton = true;\r\n            this.af_imagename = file\r\n          }\r\n\r\n        })\r\n      }\r\n    },\r\n    uploadImage(file){\r\n      let formData = new FormData()\r\n\r\n      formData.append(\"user_id\", this.userid)\r\n      formData.append(\"image_name\", file)\r\n      this.$axios.post('http://192.168.56.102:3000/api/v1/uploadImage',formData)\r\n      .then(response => {\r\n        this.imageButton = false;\r\n        this.setImage(response.data.image_name.url)\r\n        this.updateDialog.isShow = true\r\n      })\r\n      .catch(error => {\r\n        console.log(error)\r\n      });\r\n    },\r\n    setImage(image_url){\r\n      this.$store.dispatch('auth/setImageName', image_url)\r\n      .then(\r\n        response => {\r\n        }\r\n      )\r\n      .catch(\r\n        error => {\r\n          console.log(error)\r\n        }\r\n      )\r\n    },\r\n    setName(name){\r\n      this.$store.dispatch('auth/setName', name)\r\n      .then(\r\n        response => {\r\n        }\r\n      )\r\n      .catch(\r\n        error => {\r\n          console.log(error)\r\n        }\r\n      )\r\n    },\r\n    updateImage(){\r\n      let answer = window.confirm('プロフィール画像を更新してもよいですか？')\r\n\r\n      if(answer){\r\n        this.uploadImage(this.af_imagename)\r\n      }\r\n    },\r\n    updateName(){\r\n      let answer = window.confirm('ユーザ名を更新してもよいですか？')\r\n\r\n      if(answer){\r\n        this.$axios.post('http://192.168.56.102:3000/api/v1/updateName',{\r\n          user_id: this.userid,\r\n          name: this.af_username\r\n        })\r\n        .then(response => {\r\n          this.nameButton = false;\r\n          this.setName(response.data.name)\r\n          this.updateDialog.isShow = true\r\n        })\r\n        .catch(error => {\r\n          console.log(error)\r\n        });\r\n      }\r\n    },\r\n    updatePassword(){\r\n      let answer = window.confirm('パスワードを更新してもよいですか？')\r\n\r\n      if(answer){\r\n        this.$axios.post('http://192.168.56.102:3000/api/v1/checkPassword',{\r\n          user_id: this.userid,\r\n          password: this.be_password\r\n        })\r\n        .then(response => {\r\n          this.$axios.post('http://192.168.56.102:3000/api/v1/updatePassword',{\r\n            user_id: this.userid,\r\n            password: this.af_password\r\n          })\r\n          .then(response => {\r\n            this.passwordButton = false\r\n            this.be_password = ''\r\n            this.af_password = ''\r\n            this.af_confirmPassword = ''\r\n            this.updateDialog.isShow = true\r\n          })\r\n          .catch(error => {\r\n            console.log(error)\r\n          });\r\n        })\r\n        .catch(error => {\r\n          this.showAlert('現在のパスワードが異なっています', 'error')\r\n        });\r\n      }\r\n    },\r\n    showAlert(message, type){\r\n      this.alert_data.message = message\r\n      this.alert_data.type = type\r\n    },\r\n  },\r\n}\r\n",{"version":3,"sources":["Setting.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2HA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Setting.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <v-content>\r\n    <v-container fluid id=\"container\">\r\n      <v-row no-gutters id=\"row\">\r\n        <v-card width=\"700\" class=\"mx-auto mb-auto\" color=\"green lighten-5\">\r\n          <v-card-title>プロフィール設定</v-card-title>\r\n          <v-alert :color=\"alert_data.type\" v-if=\"alert_data.type\">\r\n              {{ alert_data.message }}\r\n          </v-alert>\r\n          <v-divider :inset=\"inset\"></v-divider>\r\n\r\n          <div class=\"forms\">\r\n            <v-form class=\"setting_form ml-10 mb-1\" ref=\"form\">\r\n              プロフィール画像\r\n              <div class=\"user_image\">\r\n                <div>\r\n                  <img id=\"user-image\" :src=\"be_imagename\" width=\"130\" height=\"130\"/>\r\n                </div>\r\n                <div class=\"image_buttons\">\r\n                  <label class=\"file_button\">ファイルを選択\r\n                    <input type=\"file\" accept=\"image/*\" @change=\"onFileChange\" style=\"display:none;\" />\r\n                  </label>\r\n                  <button type=\"button\" class=\"reset_button\" @click=\"resetImage\" >プロフィール画像を初期化する</button>\r\n                </div>\r\n              </div>\r\n            </v-form>\r\n\r\n            <v-form class=\"confirm_form\" ref=\"form\">\r\n                  <button type=\"button\" class=\"confirm_button\" @click=\"updateImage\" :disabled=\"!imageButton\">内容を更新</button>\r\n            </v-form>\r\n          </div>\r\n\r\n          <v-divider :inset=\"inset\"></v-divider>\r\n\r\n          <div class=\"forms\">\r\n            <v-form class=\"setting_form ml-10 mb-1\" ref=\"nameform\" @submit.prevent>\r\n              ユーザ名\r\n              <div class=\"user_name\">\r\n                <v-text-field\r\n                  v-model=\"username\"\r\n                  label=\"*1～16文字\"\r\n                  :rules=\"[rules.required, rules.userNameLength]\"\r\n                  @change=\"onNameChange\"\r\n                ></v-text-field>\r\n              </div>\r\n            </v-form>\r\n\r\n            <v-form class=\"confirm_form\" ref=\"form\">\r\n                  <button type=\"button\" class=\"confirm_button\" @click=\"updateName\" :disabled=\"!nameButton\">内容を更新</button>\r\n            </v-form>\r\n          </div>\r\n\r\n          <v-divider :inset=\"inset\"></v-divider>\r\n\r\n          <div class=\"forms\">\r\n            <v-form class=\"setting_form ml-10 mb-1\" ref=\"passwdform\" @submit.prevent>\r\n              現在のパスワード\r\n              <div class=\"user_password\">\r\n                <v-text-field\r\n                  v-model=\"be_password\"\r\n                  :type=\"be_showPassword ? 'text' : 'password'\"\r\n                  label=\"*半角英数字 8～16文字\"\r\n                  :append-icon=\"be_showPassword ? 'mdi-eye' : 'mdi-eye-off'\"\r\n                  :rules=\"[rules.required, rules.passwordLength, rules.isHalfWidth]\"\r\n                  @click:append=\"be_showPassword = !be_showPassword\"\r\n                  @change=\"onPasswordChange\"\r\n                ></v-text-field>\r\n              </div>\r\n\r\n                新しいパスワード\r\n              <div class=\"user_password\">\r\n                <v-text-field\r\n                  v-model=\"af_password\"\r\n                  :type=\"af_showPassword ? 'text' : 'password'\"\r\n                  label=\"*半角英数字 8~16文字\"\r\n                  :append-icon=\"af_showPassword ? 'mdi-eye' : 'mdi-eye-off'\"\r\n                  :rules=\"[rules.required, rules.passwordLength, rules.isHalfWidth]\"\r\n                  @click:append=\"af_showPassword = !af_showPassword\"\r\n                  @change=\"onPasswordChange\"\r\n                ></v-text-field>\r\n              </div>\r\n\r\n              新しいパスワード(確認用)\r\n            <div class=\"user_password\">\r\n              <v-text-field\r\n                v-model=\"af_confirmPassword\"\r\n                :type=\"af_showConfirmPassword ? 'text' : 'password'\"\r\n                label=\"*半角英数字 8~16文字\"\r\n                :append-icon=\"af_showConfirmPassword ? 'mdi-eye' : 'mdi-eye-off'\"\r\n                :rules=\"[rules.required, rules.passwordLength, rules.confirmPassword, rules.isHalfWidth]\"\r\n                @click:append=\"af_showConfirmPassword = !af_showConfirmPassword\"\r\n                @change=\"onPasswordChange\"\r\n              ></v-text-field>\r\n            </div>\r\n            </v-form>\r\n\r\n            <v-form class=\"confirm_form\" ref=\"form\">\r\n                  <button type=\"button\" class=\"confirm_button\" @click=\"updatePassword\" :disabled=\"!passwordButton\">内容を更新</button>\r\n            </v-form>\r\n          </div>\r\n        </v-card>\r\n\r\n        <v-dialog v-model=\"updateDialog.isShow\" persistent max-width=\"300\">\r\n          <v-card>\r\n            <v-card-title class=\"headline\">{{ updateDialog.title }}</v-card-title>\r\n            <v-card-actions>\r\n              <v-spacer></v-spacer>\r\n              <v-btn\r\n                color=\"green\"\r\n                text\r\n                @click=\"updateDialog.isShow = false\"\r\n              >\r\n                OK\r\n              </v-btn>\r\n            </v-card-actions>\r\n          </v-card>\r\n        </v-dialog>\r\n      </v-row>\r\n    </v-container>\r\n  </v-content>\r\n</template>\r\n\r\n<script>\r\nimport Vue from 'vue'\r\nimport Axios from 'axios'\r\nimport VueAxios from 'vue-axios'\r\n\r\nconst axios = Axios\r\nVue.prototype.$axios = axios\r\n\r\nVue.use(VueAxios, Axios)\r\n\r\nexport default {\r\n  name: 'setting',\r\n  data () {\r\n    return {\r\n      be_password: '',\r\n      af_password: '',\r\n      af_confirmPassword: '',\r\n      be_showPassword: false,\r\n      af_showPassword: false,\r\n      af_showConfirmPassword: false,\r\n      inset: false,\r\n      imageButton: false,\r\n      nameButton: false,\r\n      passwordButton: false,\r\n      rules: {\r\n        required: v => !!v || '必須入力です',\r\n        passwordLength: v => (v.length <= 16 && v.length >= 8) || 'パスワードは8～16文字以内に収めてください',\r\n        userIdLength: v => (v.length <= 16 && v.length >= 8) || 'ユーザーIDは8～16文字以内に収めてください',\r\n        userNameLength: v => (v.length <= 16) || 'ユーザー名は16文字以内に収めてください',\r\n        confirmPassword: v => v === this.af_password || 'パスワードが一致していません',\r\n        isHalfWidth: v => this.isHalfWidth(v) || '使用できるのは半角英数字のみです',\r\n      },\r\n      af_username: '',\r\n      af_imagename: '',\r\n      updateDialog: {\r\n        isShow: false,\r\n        title: '更新に成功しました',\r\n      },\r\n      alert_data: {\r\n        message: '',\r\n        type: null,\r\n      },\r\n    }\r\n  },\r\n  mounted(){\r\n    this.getImage()\r\n    console.log(this.$store.getters['auth/getImageName'])\r\n  },\r\n  created(){\r\n    this.$axios.defaults.headers.common['Authorization'] = \"Token \" + this.token;\r\n  },\r\n  computed: {\r\n    be_username (){\r\n      return this.$store.getters['auth/getName']\r\n    },\r\n    username: {\r\n      get: function () {\r\n        if(this.af_username){\r\n          return this.af_username\r\n        }else{\r\n          return this.be_username\r\n        }\r\n      },\r\n      set: function (val) {\r\n        this.af_username = val\r\n      }\r\n    },\r\n    userid(){\r\n      return this.$store.getters['auth/getUserId']\r\n    },\r\n    be_imagename(){\r\n      let url = this.$store.getters['auth/getImageName']\r\n      if(url){\r\n        let index = url.indexOf('/user')\r\n        url = url.substring(index)\r\n        url = decodeURI(url)\r\n        return url\r\n      }\r\n    },\r\n    token(){\r\n      return this.$store.getters['auth/getToken']\r\n    },\r\n    defaultimage(){\r\n      return \"/user/default.png\"\r\n    },\r\n  },\r\n  methods: {\r\n    isHalfWidth(str) {\r\n      str = (str==null)? \"\":str\r\n      if(str.match(/^[A-Za-z0-9]*$/)){\r\n        return true\r\n      }else{\r\n        return false\r\n      }\r\n    },\r\n    getImage(){\r\n      this.$axios.post('http://192.168.56.102:3000/api/v1/getImageName',{\r\n        token: this.token\r\n      })\r\n      .then(response => {\r\n        this.setImage(response.data.url)\r\n      })\r\n      .catch(error => {\r\n        console.log(error)\r\n      });\r\n    },\r\n    onFileChange(e){\r\n      console.log(e)\r\n      let files = e.target.files || e.dataTransfer.files\r\n\r\n      let reader = new FileReader()\r\n      reader.readAsDataURL(files[0])\r\n      reader.onload = (e) => {\r\n        var img = document.getElementById('user-image')\r\n        img.src = reader.result\r\n        this.imageButton = true\r\n        this.af_imagename = files[0]\r\n      }\r\n    },\r\n    onNameChange(e){\r\n      if(this.be_username != e && this.$refs.nameform.validate()){\r\n        this.nameButton = true\r\n      }else{\r\n        this.nameButton = false\r\n      }\r\n    },\r\n    onPasswordChange(){\r\n      if(this.$refs.passwdform.validate()){\r\n        this.passwordButton = true\r\n      }else{\r\n        this.passwordButton = false\r\n      }\r\n    },\r\n    resetImage(){\r\n      let answer = window.confirm('プロフィール画像を初期化してもよいですか？')\r\n      let reader = new FileReader()\r\n\r\n      if(answer){\r\n        console.log('answer yes')\r\n        fetch(this.defaultimage)\r\n        .then(response => response.blob())\r\n        .then(blob => new File([blob], \"default.jpg\"))\r\n        .then(file => {\r\n\r\n          reader.readAsDataURL(file)\r\n          reader.onload = (e) => {\r\n            var img = document.getElementById('user-image')\r\n            img.src = reader.result\r\n            this.imageButton = true;\r\n            this.af_imagename = file\r\n          }\r\n\r\n        })\r\n      }\r\n    },\r\n    uploadImage(file){\r\n      let formData = new FormData()\r\n\r\n      formData.append(\"user_id\", this.userid)\r\n      formData.append(\"image_name\", file)\r\n      this.$axios.post('http://192.168.56.102:3000/api/v1/uploadImage',formData)\r\n      .then(response => {\r\n        this.imageButton = false;\r\n        this.setImage(response.data.image_name.url)\r\n        this.updateDialog.isShow = true\r\n      })\r\n      .catch(error => {\r\n        console.log(error)\r\n      });\r\n    },\r\n    setImage(image_url){\r\n      this.$store.dispatch('auth/setImageName', image_url)\r\n      .then(\r\n        response => {\r\n        }\r\n      )\r\n      .catch(\r\n        error => {\r\n          console.log(error)\r\n        }\r\n      )\r\n    },\r\n    setName(name){\r\n      this.$store.dispatch('auth/setName', name)\r\n      .then(\r\n        response => {\r\n        }\r\n      )\r\n      .catch(\r\n        error => {\r\n          console.log(error)\r\n        }\r\n      )\r\n    },\r\n    updateImage(){\r\n      let answer = window.confirm('プロフィール画像を更新してもよいですか？')\r\n\r\n      if(answer){\r\n        this.uploadImage(this.af_imagename)\r\n      }\r\n    },\r\n    updateName(){\r\n      let answer = window.confirm('ユーザ名を更新してもよいですか？')\r\n\r\n      if(answer){\r\n        this.$axios.post('http://192.168.56.102:3000/api/v1/updateName',{\r\n          user_id: this.userid,\r\n          name: this.af_username\r\n        })\r\n        .then(response => {\r\n          this.nameButton = false;\r\n          this.setName(response.data.name)\r\n          this.updateDialog.isShow = true\r\n        })\r\n        .catch(error => {\r\n          console.log(error)\r\n        });\r\n      }\r\n    },\r\n    updatePassword(){\r\n      let answer = window.confirm('パスワードを更新してもよいですか？')\r\n\r\n      if(answer){\r\n        this.$axios.post('http://192.168.56.102:3000/api/v1/checkPassword',{\r\n          user_id: this.userid,\r\n          password: this.be_password\r\n        })\r\n        .then(response => {\r\n          this.$axios.post('http://192.168.56.102:3000/api/v1/updatePassword',{\r\n            user_id: this.userid,\r\n            password: this.af_password\r\n          })\r\n          .then(response => {\r\n            this.passwordButton = false\r\n            this.be_password = ''\r\n            this.af_password = ''\r\n            this.af_confirmPassword = ''\r\n            this.updateDialog.isShow = true\r\n          })\r\n          .catch(error => {\r\n            console.log(error)\r\n          });\r\n        })\r\n        .catch(error => {\r\n          this.showAlert('現在のパスワードが異なっています', 'error')\r\n        });\r\n      }\r\n    },\r\n    showAlert(message, type){\r\n      this.alert_data.message = message\r\n      this.alert_data.type = type\r\n    },\r\n  },\r\n}\r\n</script>\r\n\r\n<style>\r\n#container {\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n#row {\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n#col {\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n.forms{\r\n  display: flex;\r\n}\r\n.setting_form{\r\n  width: 420px;\r\n  margin: 1em 0em 0em 0em;\r\n}\r\n.confirm_form{\r\n  width: 150px;\r\n  margin: 0 0 0 auto;\r\n}\r\n.user_image{\r\n  display: flex;\r\n  margin: 0.5em 0em 2em 1em;\r\n}\r\n.image_buttons{\r\n}\r\n.file_button{\r\n  margin: 0.5em;\r\n  padding: 0.3em;\r\n  text-align: center;\r\n  border: 0.1px solid #ccc;\r\n  box-shadow: 1px 1px 2px #ccc;\r\n  background: #e0e0e0;\r\n}\r\n.reset_button{\r\n  font-size: 12px;\r\n  margin: 2em 0em 0em 0.5em;\r\n  padding: 0.3em;\r\n  text-align: center;\r\n  border: 0.1px solid #ccc;\r\n  box-shadow: 1px 1px 2px #ccc;\r\n  background: #e0e0e0;\r\n}\r\n.user_name{\r\n  margin: 0.5em 0em 2em 1em;\r\n}\r\n.user_password{\r\n  margin: 0.5em 0em 2em 1em;\r\n}\r\n.confirm_button{\r\n  margin: 0.5em;\r\n  padding: 0.3em;\r\n  text-align: center;\r\n  border: 0.1px solid #ccc;\r\n  box-shadow: 1px 1px 2px #ccc;\r\n  background: #e0e0e0;\r\n}\r\nbutton[type=\"button\"][disabled]{\r\n    background:#808080;\r\n    color: #a9a9a9;\r\n}\r\n</style>\r\n"]}]}